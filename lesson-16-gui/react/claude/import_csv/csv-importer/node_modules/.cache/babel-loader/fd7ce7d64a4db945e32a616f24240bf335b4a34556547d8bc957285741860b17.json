{"ast":null,"code":"var _jsxFileName = \"/home/gongai/projects/wgong/py4kids/lesson-16-gui/react/claude/import_csv/csv-importer/src/components/UploadCSV.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\nfunction UploadCSV({\n  datasetName,\n  onDatasetNameChange,\n  onCreateDataset,\n  onUploadCSV\n}) {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFiles(event.target.files);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFiles) return;\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    try {\n      const response = await axios.post(`${BASE_URL}/api/upload-csv/${datasetName}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      onUploadCSV(response.data);\n    } catch (err) {\n      console.error('Error uploading CSV:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"1. Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter dataset name\",\n      value: datasetName,\n      onChange: e => onDatasetNameChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCreateDataset,\n      children: \"Create Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \".csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadCSV, \"S5gKaKaQSjpBq52dz/0MTF9xx90=\");\n_c = UploadCSV;\nexport default UploadCSV;\nvar _c;\n$RefreshReg$(_c, \"UploadCSV\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BASE_URL","process","env","REACT_APP_API_BASE_URL","UploadCSV","datasetName","onDatasetNameChange","onCreateDataset","onUploadCSV","_s","selectedFiles","setSelectedFiles","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","i","length","append","response","post","headers","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","onClick","onSubmit","multiple","accept","_c","$RefreshReg$"],"sources":["/home/gongai/projects/wgong/py4kids/lesson-16-gui/react/claude/import_csv/csv-importer/src/components/UploadCSV.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nfunction UploadCSV({ datasetName, onDatasetNameChange, onCreateDataset, onUploadCSV }) {\n  const [selectedFiles, setSelectedFiles] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFiles(event.target.files);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!selectedFiles) return;\n\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n\n    try {\n      const response = await axios.post(\n        `${BASE_URL}/api/upload-csv/${datasetName}`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      );\n      onUploadCSV(response.data);\n    } catch (err) {\n      console.error('Error uploading CSV:', err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>1. Upload CSV</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter dataset name\"\n        value={datasetName}\n        onChange={(e) => onDatasetNameChange(e.target.value)}\n      />\n      <button onClick={onCreateDataset}>Create Dataset</button>\n      <br />\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" multiple accept=\".csv\" onChange={handleFileChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n}\n\nexport default UploadCSV;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}