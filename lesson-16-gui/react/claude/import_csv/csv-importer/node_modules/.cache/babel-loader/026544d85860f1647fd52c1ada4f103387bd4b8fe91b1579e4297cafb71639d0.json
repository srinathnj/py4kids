{"ast":null,"code":"var _jsxFileName = \"/home/gongai/projects/wgong/py4kids/lesson-16-gui/react/claude/import_csv/csv-importer/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport UploadCSV from './components/UploadCSV';\nimport ReviewData from './components/ReviewData';\nimport CreateTables from './components/CreateTables';\nimport LoadData from './components/LoadData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\nfunction App() {\n  _s();\n  const [datasetName, setDatasetName] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [tableConfigs, setTableConfigs] = useState([]);\n  const [generatedDDL, setGeneratedDDL] = useState([]);\n  const handleCreateDataset = async () => {\n    try {\n      await axios.post(`${BASE_URL}/api/create-dataset/${datasetName}`);\n    } catch (err) {\n      console.error('Error creating dataset:', err);\n    }\n  };\n  const handleUploadCSV = async uploadedFiles => {\n    setUploadedFiles(uploadedFiles);\n  };\n  const handleReviewData = reviewedConfigs => {\n    setTableConfigs(reviewedConfigs);\n  };\n  const handleGenerateDDL = ddl => {\n    // Save the generated DDL to the component's state\n    setGeneratedDDL(ddl);\n\n    // Optionally, you can perform additional actions like showing a success message\n    alert('DDL generated successfully!');\n  };\n  const handleCreateTables = async () => {\n    try {\n      // Make an API call to create tables\n      await axios.post(`${BASE_URL}/api/create-tables/${datasetName}`);\n\n      // Handle the success case, e.g., show a success message\n      alert('Tables created successfully!');\n    } catch (err) {\n      // Handle the error case, e.g., show an error message\n      console.error('Error creating tables:', err);\n      alert('Error creating tables. Please check the console for details.');\n    }\n  };\n  const handleLoadData = async loadedTables => {\n    try {\n      // Make an API call to load data into tables\n      const response = await axios.post(`${BASE_URL}/api/load-data/${datasetName}`, tableConfigs);\n\n      // Handle the success case, e.g., show a success message with loaded table names\n      const loadedTableNames = response.data.loaded_tables.join(', ');\n      alert(`Data loaded successfully into tables: ${loadedTableNames}`);\n    } catch (err) {\n      // Handle the error case, e.g., show an error message\n      console.error('Error loading data:', err);\n      alert('Error loading data. Please check the console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSV Import Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadCSV, {\n      datasetName: datasetName,\n      onDatasetNameChange: setDatasetName,\n      onCreateDataset: handleCreateDataset,\n      onUploadCSV: handleUploadCSV\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReviewData, {\n      uploadedFiles: uploadedFiles,\n      onReviewData: handleReviewData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTables, {\n      datasetName: datasetName,\n      tableConfigs: tableConfigs,\n      onGenerateDDL: handleGenerateDDL,\n      onCreateTables: handleCreateTables\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadData, {\n      datasetName: datasetName,\n      tableConfigs: tableConfigs,\n      onLoadData: handleLoadData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4dknoI2a0iPWNTRA9MsuzK/8+4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","UploadCSV","ReviewData","CreateTables","LoadData","jsxDEV","_jsxDEV","BASE_URL","process","env","REACT_APP_API_BASE_URL","App","_s","datasetName","setDatasetName","uploadedFiles","setUploadedFiles","tableConfigs","setTableConfigs","generatedDDL","setGeneratedDDL","handleCreateDataset","post","err","console","error","handleUploadCSV","handleReviewData","reviewedConfigs","handleGenerateDDL","ddl","alert","handleCreateTables","handleLoadData","loadedTables","response","loadedTableNames","data","loaded_tables","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDatasetNameChange","onCreateDataset","onUploadCSV","onReviewData","onGenerateDDL","onCreateTables","onLoadData","_c","$RefreshReg$"],"sources":["/home/gongai/projects/wgong/py4kids/lesson-16-gui/react/claude/import_csv/csv-importer/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport UploadCSV from './components/UploadCSV';\nimport ReviewData from './components/ReviewData';\nimport CreateTables from './components/CreateTables';\nimport LoadData from './components/LoadData';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nfunction App() {\n  const [datasetName, setDatasetName] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [tableConfigs, setTableConfigs] = useState([]);\n  const [generatedDDL, setGeneratedDDL] = useState([]);\n\n  const handleCreateDataset = async () => {\n    try {\n      await axios.post(`${BASE_URL}/api/create-dataset/${datasetName}`);\n    } catch (err) {\n      console.error('Error creating dataset:', err);\n    }\n  };\n  \n  const handleUploadCSV = async (uploadedFiles) => {\n    setUploadedFiles(uploadedFiles);\n  };\n  \n  const handleReviewData = (reviewedConfigs) => {\n    setTableConfigs(reviewedConfigs);\n  };\n  \n  const handleGenerateDDL = (ddl) => {\n    // Save the generated DDL to the component's state\n    setGeneratedDDL(ddl);\n    \n    // Optionally, you can perform additional actions like showing a success message\n    alert('DDL generated successfully!');\n  };\n  \n  const handleCreateTables = async () => {\n    try {\n      // Make an API call to create tables\n      await axios.post(`${BASE_URL}/api/create-tables/${datasetName}`);\n      \n      // Handle the success case, e.g., show a success message\n      alert('Tables created successfully!');\n    } catch (err) {\n      // Handle the error case, e.g., show an error message\n      console.error('Error creating tables:', err);\n      alert('Error creating tables. Please check the console for details.');\n    }\n  };\n  \n  const handleLoadData = async (loadedTables) => {\n    try {\n      // Make an API call to load data into tables\n      const response = await axios.post(\n        `${BASE_URL}/api/load-data/${datasetName}`,\n        tableConfigs\n      );\n      \n      // Handle the success case, e.g., show a success message with loaded table names\n      const loadedTableNames = response.data.loaded_tables.join(', ');\n      alert(`Data loaded successfully into tables: ${loadedTableNames}`);\n    } catch (err) {\n      // Handle the error case, e.g., show an error message\n      console.error('Error loading data:', err);\n      alert('Error loading data. Please check the console for details.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>CSV Import Tool</h1>\n\n      <UploadCSV \n        datasetName={datasetName}\n        onDatasetNameChange={setDatasetName}\n        onCreateDataset={handleCreateDataset}\n        onUploadCSV={handleUploadCSV}\n      />\n\n      <ReviewData\n        uploadedFiles={uploadedFiles}\n        onReviewData={handleReviewData} \n      />\n      \n      <CreateTables\n        datasetName={datasetName}\n        tableConfigs={tableConfigs}\n        onGenerateDDL={handleGenerateDDL}\n        onCreateTables={handleCreateTables}\n      />\n      \n      <LoadData \n        datasetName={datasetName}\n        tableConfigs={tableConfigs}\n        onLoadData={handleLoadData}\n      />\n      \n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}