id,question,content,training_data_type
00713bf4-aef0-5f04-b8ce-81a5c04c52f7-sql,Find all invoices since 2010 and the total amount invoiced:,"SELECT InvoiceDate, SUM(Total) AS TotalAmount 
FROM invoices
WHERE InvoiceDate >= '2010-01-01'
GROUP BY InvoiceDate",sql
06f334ac-d0ae-5cf0-a9b5-2e260c988cf7-sql,List all employees and their reporting manager's name (if any):,"SELECT e.FirstName, e.LastName,  
       CASE WHEN e.ReportsTo IS NULL THEN 'None' ELSE 
             (SELECT f.FirstName || ' ' || f.LastName 
              FROM employees f 
              WHERE f.EmployeeId = e.ReportsTo) END AS ReportingManager
FROM employees e",sql
08cbdebe-9011-543a-98fc-8b944459d8e6-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT p.Name, SUM(t.Milliseconds) AS TotalDuration 
FROM playlists p
JOIN playlist_track pt ON p.PlaylistId = pt.PlaylistId
JOIN tracks t ON pt.TrackId = t.TrackId
GROUP BY p.Name
HAVING COUNT(pt.TrackId) >= 10",sql
1e821f80-5144-5b11-98b2-ac27afd0c5ac-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ","SELECT * 
FROM tracks
WHERE LOWER(Name) LIKE '%what%'",sql
2924d0bf-4982-584b-b739-6b2d2cb18903-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT c.FirstName, 
       c.LastName,
       SUM(ii.Quantity) AS TotalAlbumQuantity
FROM customers c
JOIN invoice_items ii ON c.CustomerId = ii.InvoiceId
WHERE ii.TrackId IN (SELECT TrackId FROM tracks WHERE MediaTypeId = 1)
GROUP BY c.FirstName, c.LastName
ORDER BY TotalAlbumQuantity DESC
LIMIT 5",sql
50e8346e-e521-51be-bba2-ac3abf4edbfe-sql,"  
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    ","SELECT c.FirstName, 
       c.LastName,
       SUM(i.Total) AS TotalSpent
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.FirstName, c.LastName
ORDER BY TotalSpent DESC
LIMIT 5",sql
626acb31-8537-51cd-b232-00cd26f6b6f7-sql,List all invoices with a total exceeding $10,"SELECT * 
FROM invoices
WHERE Total > 10",sql
69533644-e0aa-5cf0-b0d5-3bb9a35867d1-sql,Find the customer with the most invoices ,"SELECT c.FirstName, 
       c.LastName,
       COUNT(i.InvoiceId) AS TotalInvoices
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.FirstName, c.LastName
ORDER BY TotalInvoices DESC
LIMIT 1",sql
808bd5e5-fd75-519e-8b68-64fe2d596093-sql, Get the average invoice total for each customer:,"SELECT customers.FirstName, 
       customers.LastName,
       AVG(invoices.Total) AS AverageInvoiceTotal
FROM customers
JOIN invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY customers.FirstName, customers.LastName",sql
85787a9d-fb26-507f-9c90-647e361db087-sql,Get the total number of invoices for each customer,"SELECT customers.FirstName, customers.LastName, COUNT(invoices.InvoiceId) AS TotalInvoices
FROM customers
JOIN invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY customers.FirstName, customers.LastName",sql
8d4405e0-f178-5004-bcc5-3ca65f792a53-sql,Find the customer who bought the most albums in total quantity (across all invoices):,"SELECT c.FirstName, 
       c.LastName,
       SUM(ii.Quantity) AS TotalAlbumQuantity
FROM customers c
JOIN invoice_items ii ON c.CustomerId = ii.InvoiceId
WHERE ii.TrackId IN (SELECT TrackId FROM tracks WHERE MediaTypeId = 1)
GROUP BY c.FirstName, c.LastName
ORDER BY TotalAlbumQuantity DESC
LIMIT 1",sql
a0006c30-889f-5782-8f59-726368872290-sql,How many customers are there,SELECT COUNT(*) FROM customers,sql
a426995f-6cde-5091-b2a5-903d50ca89e1-sql,List all genres and the number of tracks in each genre:,"SELECT g.Name, COUNT(t.TrackId) AS TrackCount
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.Name",sql
a7c0f2f8-ab28-5f73-bfda-343d36aff354-sql," 
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    ","SELECT ""artists"".Name, COUNT(tracks.TrackId) AS TrackCount
FROM ""artists""
JOIN ""albums"" ON ""artists"".ArtistId = ""albums"".ArtistId
JOIN ""tracks"" ON ""albums"".AlbumId = ""tracks"".AlbumId
GROUP BY ""artists"".Name
ORDER BY TrackCount DESC
LIMIT 10",sql
aa52cfb3-a5dc-52b3-b753-d39d5dd3512e-sql,what are the top 5 countries that customers come from?,"SELECT Country, COUNT(*) AS CustomerCount
FROM customers
GROUP BY Country
ORDER BY CustomerCount DESC
LIMIT 5",sql
b4369963-9b06-5ad4-8d22-8875c10ecbb7-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT Name, UnitPrice
FROM tracks
ORDER BY UnitPrice DESC
LIMIT 5",sql
b46e7add-6f19-5e52-8b44-69eda8865997-sql,Find the total number of invoices per country,"SELECT c.Country, COUNT(i.InvoiceId) AS TotalInvoices
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.Country",sql
d8a2f948-dffa-5524-a5f9-174cc1a8da73-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table',sql
e64fce08-fac2-5d1e-a5e7-35c3b4dc4283-sql,List all customers from Canada and their email addresses:,"SELECT FirstName, LastName, Email
FROM customers
WHERE Country = 'Canada'",sql
eb139d85-7328-543c-bbc8-2c0f69f468f9-sql,"
        For the question which table stores customer's orders, 
        the generated SQL statement invoices 


 results in the following exception [ERROR-SQL] the generated SQL : invoices 



 does not starts with ('select','with') .
        Please fix the error and re-generate the SQL
        ","SELECT * FROM invoices  
",sql
f8d48529-cc37-515c-b6a8-1739a0d51865-sql,List all albums and their corresponding artist names  ,"SELECT ""albums"".Title, ""artists"".Name
FROM ""albums""
JOIN ""artists"" ON ""albums"".ArtistId = ""artists"".ArtistId",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
