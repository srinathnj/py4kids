id,question,content,training_data_type
149754a0-aae5-526d-a24f-aa41a6f95d75-sql,which table stores customer's orders,SELECT name FROM sqlite_master WHERE type='table' AND name LIKE 'invoices%' LIMIT 20,sql
1652acd1-1574-52d1-a36a-4b15204d315f-sql,List all customers from Canada and their email addresses:,"SELECT Country, Email
FROM customers
WHERE Country = 'Canada' LIMIT 20",sql
29b9dc23-b592-5dae-9c0a-324a99149b7a-sql,Find the customer with the most invoices ,"SELECT c.CustomerId, COUNT(i.InvoiceId) as 'Total Invoices'
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.CustomerId
ORDER BY `Total Invoices` DESC LIMIT 1",sql
335ea897-52e8-5a05-92af-dfa7beb40ce0-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT P.Name, SUM(T.Milliseconds / 1000) as 'Total Duration'
FROM playlists P
JOIN playlist_track PT ON P.PlaylistId = PT.PlaylistId
JOIN tracks T ON PT.TrackId = T.TrackId
GROUP BY P.Name
HAVING COUNT(P.Name) >= 10 LIMIT 20",sql
3fcf7ae2-0b4b-5770-8354-1aa3c5c49cdc-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT TrackId, UnitPrice 
FROM tracks 
ORDER BY UnitPrice DESC LIMIT 5",sql
432812d6-ffa2-5f2c-96de-9b34c1affe2f-sql,Identify artists who have albums with tracks appearing in multiple genres:,"SELECT T3.Name, COUNT(T2.AlbumId) as 'Albums'
FROM tracks AS T1
JOIN albums AS T2 ON T1.AlbumId = T2.AlbumId 
JOIN artists AS T3 ON T2.ArtistId = T3.ArtistId
GROUP BY T3.Name HAVING COUNT(DISTINCT T1.GenreId) > 1 LIMIT 20",sql
4514ddd5-d14a-5252-a0a9-df53aa14a825-sql,"  
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    ","SELECT CustomerId, SUM(Total) as 'Total Spent' FROM invoices GROUP BY CustomerId ORDER BY `Total Spent` DESC LIMIT 5",sql
47613bb3-6ec0-5476-b654-0125fb03f615-sql,List all employees and their reporting manager's name (if any):,"SELECT T1.FirstName, T1.LastName, COALESCE(T2.FirstName, 'No Manager') as 'Reporting Manager'
FROM employees AS T1
LEFT JOIN employees AS T2 ON T1.ReportsTo = T2.EmployeeId LIMIT 20",sql
560dacd9-7bd4-5b99-a493-2a51f5832154-sql,Find all invoices since 2010 and the total amount invoiced:,"SELECT InvoiceDate, Total 
FROM invoices 
WHERE strftime('%Y', InvoiceDate) > '2010' LIMIT 20",sql
6c7d66a9-5582-56db-90c6-f33ac6f83ac7-sql,"
                    Generating SQL for this question: 
                    Generating SQL for this question: Find the customer who bought the most albums in total quantity (across all invoices):
                    results in the following error: [ERROR-DB] Failed to execute SQL: SELECT c.CustomerId, SUM(ii.Quantity) as 'Total Albums Purchased'
FROM customers c
JOIN invoice_items ii ON c.CustomerId = ii.CustomerId
GROUP BY c.CustomerId ORDER BY `Total Albums Purchased` DESC LIMIT 1
 Execution failed on sql 'SELECT c.CustomerId, SUM(ii.Quantity) as 'Total Albums Purchased'
FROM customers c
JOIN invoice_items ii ON c.CustomerId = ii.CustomerId
GROUP BY c.CustomerId ORDER BY `Total Albums Purchased` DESC LIMIT 1': no such column: ii.CustomerId .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-DB] Failed to execute SQL: SELECT c.CustomerId, SUM(ii.Quantity) as 'Total Albums Purchased'
FROM customers c
JOIN invoice_items ii ON c.CustomerId = ii.CustomerId
GROUP BY c.CustomerId ORDER BY `Total Albums Purchased` DESC LIMIT 1
 Execution failed on sql 'SELECT c.CustomerId, SUM(ii.Quantity) as 'Total Albums Purchased'
FROM customers c
JOIN invoice_items ii ON c.CustomerId = ii.CustomerId
GROUP BY c.CustomerId ORDER BY `Total Albums Purchased` DESC LIMIT 1': no such column: ii.CustomerId .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT c.CustomerId, SUM(ii.Quantity) as 'Total Albums Purchased'
FROM customers c
JOIN invoice_items ii ON c.CustomerId = ii.InvoiceId
GROUP BY c.CustomerId ORDER BY `Total Albums Purchased` DESC LIMIT 1",sql
8e8cc051-7dcf-580b-b6ea-1743b8257006-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ","SELECT TrackId, Name 
FROM tracks 
WHERE Name LIKE '%what%' COLLATE NOCASE LIMIT 20",sql
9f52b00e-4ebd-5eda-b218-51645a2fbdc1-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table' LIMIT 20,sql
a3146099-61f5-5038-a674-df567fd9ffe0-sql,How many customers are there,SELECT COUNT(CustomerId) FROM customers LIMIT 20,sql
a880db7c-af5a-569d-9006-5efcee4e080f-sql,"
                    Generating SQL for this question:  
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    
                    results in the following error: [ERROR-DB] Failed to execute SQL: SELECT T2.Name, COUNT(T1.TrackId) as 'Track Count' 
FROM tracks AS T1
JOIN albums AS T2 ON T1.AlbumId = T2.AlbumId 
GROUP BY T2.Name 
ORDER BY `Track Count` DESC LIMIT 10
 Execution failed on sql 'SELECT T2.Name, COUNT(T1.TrackId) as 'Track Count' 
FROM tracks AS T1
JOIN albums AS T2 ON T1.AlbumId = T2.AlbumId 
GROUP BY T2.Name 
ORDER BY `Track Count` DESC LIMIT 10': no such column: T2.Name .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT T3.Name, COUNT(T1.TrackId) as 'Track Count'
FROM tracks AS T1
JOIN albums AS T2 ON T1.AlbumId = T2.AlbumId
JOIN artists AS T3 ON T2.ArtistId = T3.ArtistId 
GROUP BY T3.Name ORDER BY `Track Count` DESC LIMIT 10",sql
bb7d76ac-6d1c-5efd-9660-29c0d4d4663f-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT c.CustomerId, SUM(ii.Quantity) as 'Total Albums Purchased'
FROM customers c
JOIN invoice_items ii ON c.CustomerId = i.CustomerId
JOIN invoices i ON ii.InvoiceId = i.InvoiceId
GROUP BY c.CustomerId
ORDER BY `Total Albums Purchased` DESC LIMIT 5",sql
cce5aad8-0a2f-5beb-bee1-1c3710ca6892-sql, Get the average invoice total for each customer:,"SELECT CustomerId, AVG(Total) as 'Average Invoice Total' FROM invoices GROUP BY CustomerId LIMIT 20",sql
d0da8b78-f937-5743-acf1-97147da74c12-sql,List all albums and their corresponding artist names  ,"SELECT DISTINCT T1.Title, T2.Name 
FROM albums AS T1
JOIN artists AS T2 ON T1.ArtistId = T2.ArtistId LIMIT 20",sql
daafcb6f-dd34-5554-97b0-b91eb2a98714-sql,Find the total number of invoices per country,"SELECT BillingCountry, COUNT(Invoices.InvoiceId) as 'Total Invoices'
FROM invoices 
GROUP BY BillingCountry ORDER BY `Total Invoices` DESC LIMIT 20",sql
ddec6758-c57a-589d-b790-99d21f3adc2b-sql,List all invoices with a total exceeding $10,"SELECT InvoiceId, Total
FROM invoices
WHERE Total > 10.00 LIMIT 20",sql
e4b7c029-dada-5440-b0f3-e0c9690bd2ab-sql,what are the top 5 countries that customers come from?,"SELECT Country, COUNT(CustomerId) as 'Customer Count' FROM customers GROUP BY Country ORDER BY `Customer Count` DESC LIMIT 5",sql
ee30252d-7dfd-5632-8412-f34493e37197-sql,Get the total number of invoices for each customer,"SELECT CustomerId, COUNT(InvoiceId) as 'Total Invoices' 
FROM invoices 
GROUP BY CustomerId ORDER BY `Total Invoices` DESC LIMIT 20",sql
fdd2a955-1785-5821-a545-e4a6bd46676f-sql,List all genres and the number of tracks in each genre:,"SELECT T2.Name, COUNT(T1.TrackId) as 'Track Count' 
FROM tracks AS T1
JOIN genres AS T2 ON T1.GenreId = T2.GenreId 
GROUP BY T2.Name LIMIT 20",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
