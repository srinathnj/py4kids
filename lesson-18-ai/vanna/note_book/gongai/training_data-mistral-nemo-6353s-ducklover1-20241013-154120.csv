id,question,content,training_data_type
049d362f-dfca-529e-ba7e-7d16e1ddaf33-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT p.Name AS PlaylistName, SUM(t.Milliseconds) AS TotalDuration FROM playlists p JOIN playlist_track pt ON p.PlaylistId = pt.PlaylistId JOIN tracks t ON pt.TrackId = t.TrackId GROUP BY p.PlaylistId HAVING COUNT(t.TrackId) >= 10",sql
07a7f214-7ef1-52d4-b327-3e2f8cd9bd57-sql,"
                For this question: which table stores customer's orders, 
                your generated SQL statement: invoices results in the following exception: [ERROR-SQL] the generated SQL : invoices
 does not starts with ('select','with') .
                Can you please fix the error and re-generate the SQL statement?
            ",SELECT name FROM sqlite_master WHERE type='table' AND name='invoices',sql
146ba04e-dbac-58c0-b0c6-fe7b8c397c68-sql,Get the total number of invoices for each customer,"SELECT CustomerId, COUNT(*)
FROM invoices
GROUP BY CustomerId",sql
21d4b292-07cb-51d4-ba89-6ac2bbc6b490-sql,what are the top 5 countries that customers come from?,"SELECT country, COUNT(*) as num_customers
FROM customers
GROUP BY country
ORDER BY num_customers DESC
LIMIT 5",sql
256eeef7-aff7-59e7-bb8a-f2c361c407cf-sql,"  
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    ","SELECT CustomerId, SUM(Total) AS TotalSpent FROM invoices GROUP BY CustomerId ORDER BY TotalSpent DESC LIMIT 5",sql
26ba68ab-b932-5f22-89da-74029f5e0285-sql,Find the customer who bought the most albums in total quantity (across all invoices):,"SELECT c.CustomerId, COUNT(ii.TrackId) AS TotalAlbumsBought FROM customers c JOIN invoices i ON c.CustomerId = i.CustomerId JOIN invoice_items ii ON i.InvoiceId = ii.InvoiceId WHERE ii.TrackId IN (SELECT ta.TrackId FROM tracks ta JOIN albums a ON ta.AlbumId = a.AlbumId GROUP BY ta.TrackId) GROUP BY c.CustomerId ORDER BY TotalAlbumsBought DESC LIMIT 1",sql
2f21bb39-7f91-5048-adac-9c721490ee39-sql,List all genres and the number of tracks in each genre:,"SELECT g.Name AS GenreName, COUNT(t.TrackId) AS TrackCount
FROM genres g
LEFT JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.GenreId",sql
55774a9c-f87d-50a9-9502-0925f5638dc5-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT
    i.CustomerId,
    COUNT(ii.TrackId) AS TotalAlbumsBought
FROM
    invoices i
JOIN
    invoice_items ii ON i.InvoiceId = ii.InvoiceId
GROUP BY
    i.CustomerId
ORDER BY
    TotalAlbumsBought DESC
LIMIT 5",sql
5e22f1a8-263e-5e39-a6c7-c9e07c831a7e-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT TrackId, Name, UnitPrice FROM tracks ORDER BY UnitPrice DESC LIMIT 5",sql
6304c034-7e76-5a53-b15d-da112977366d-sql,"
                For this question: 
                For this question: Find the total number of invoices per country, 
                your generated SQL statement: SELECTBillingCountry, COUNT(*) FROMinvoicesGROUP BYBillingCountry results in the following exception: [ERROR-DB] Failed to execute SQL: SELECTBillingCountry, COUNT(*) FROMinvoicesGROUP BYBillingCountry
 Execution failed on sql 'SELECTBillingCountry, COUNT(*) FROMinvoicesGROUP BYBillingCountry': near ""SELECTBillingCountry"": syntax error .
                Can you please fix the error and re-generate the SQL statement?
            , 
                your generated SQL statement: SELECT Country, COUNT(*) as TotalInvoices
FROM invoices
GROUP BY Country results in the following exception: [ERROR-DB] Failed to execute SQL: SELECT Country, COUNT(*) as TotalInvoices
FROM invoices
GROUP BY Country
 Execution failed on sql 'SELECT Country, COUNT(*) as TotalInvoices
FROM invoices
GROUP BY Country': no such column: Country .
                Can you please fix the error and re-generate the SQL statement?
            ","SELECT BillingCountry, COUNT(*) FROM invoices GROUP BY BillingCountry",sql
6a3adf50-f6a4-55ad-82bf-8b599dc0eb56-sql,List all employees and their reporting manager's name (if any):,"SELECT e.FirstName AS EmployeeFirstName,
       e.LastName AS EmployeeLastName,
       m.FirstName AS ManagerFirstName,
       m.LastName AS ManagerLastName
FROM employees e
LEFT JOIN employees m ON e.ReportsTo = m.EmployeeId",sql
977bc391-4d99-58b4-95d7-a244618f101d-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ",SELECT * FROM tracks WHERE lower(Name) LIKE '%what%',sql
a0006c30-889f-5782-8f59-726368872290-sql,How many customers are there,SELECT COUNT(*) FROM customers,sql
a45e0e89-4581-5580-aa5f-900b226c1d23-sql,List all invoices with a total exceeding $10,SELECT * FROM invoices WHERE Total > 10,sql
a71b1bc0-d9f7-5545-8737-b9dea787c93e-sql,List all albums and their corresponding artist names  ,"SELECT a.Title AS AlbumName, ar.Name AS ArtistName FROM albums a JOIN artists ar ON a.ArtistId = ar.ArtistId",sql
bb8607ca-0979-5e6f-b8ab-f93e13a36bc6-sql, Get the average invoice total for each customer:,"SELECT CustomerId, AVG(Total) AS AvgInvoiceTotal FROM invoices GROUP BY CustomerId",sql
ce84e4f9-1a59-5331-bed5-b49a01afdcee-sql,Find the customer with the most invoices ,"SELECT CustomerId, COUNT(*) as TotalInvoices FROM invoices GROUP BY CustomerId ORDER BY TotalInvoices DESC LIMIT 1",sql
d8a2f948-dffa-5524-a5f9-174cc1a8da73-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table',sql
e11ee9ba-7fa0-51d6-88e1-c8ffab980848-sql,Find all invoices since 2010 and the total amount invoiced:,"SELECT InvoiceId, InvoiceDate, Total FROM invoices WHERE InvoiceDate >= '2010-01-01'",sql
e3fd07a6-efb2-5760-be39-8dff17c34f34-sql," 
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    ","SELECT a.ArtistId, COUNT(t.TrackId) as NumTracks
FROM artists a
JOIN albums alb ON a.ArtistId = alb.ArtistId
JOIN tracks t ON alb.AlbumId = t.AlbumId
GROUP BY a.ArtistId
ORDER BY NumTracks DESC
LIMIT 10",sql
e8ce5394-d430-51a4-a788-05a38741b0f6-sql,List all customers from Canada and their email addresses:,"SELECT FirstName, LastName, Email FROM customers WHERE Country = 'Canada'",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
