id,question,content,training_data_type
075d6bab-c47f-51d2-bf0b-df89bcfd7509-sql,How many customers are there,"SELECT COUNT(*) FROM ""customers"" LIMIT 20",sql
2aae2563-ffa5-5f4f-b67b-91346c2acc1e-sql,"  
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    ","SELECT ""customers"".CustomerId AS CustomerID, ""customers"".FirstName, ""customers"".LastName, SUM(""invoices"".Total) AS TotalSpend
    FROM ""customers""
    JOIN ""invoices"" ON ""customers"".CustomerId = ""invoices"".CustomerId
    GROUP BY ""customers"".CustomerId, ""customers"".FirstName, ""customers"".LastName
    ORDER BY TotalSpend DESC
    LIMIT 5;",sql
2c708f43-c17a-58fc-9cd9-cd8fcaf9df7b-sql," 
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    ","SELECT a.Name AS ArtistName, COUNT(t.TrackId) AS NumTracks
    FROM ""artists"" AS a
    JOIN ""albums"" AS al ON a.ArtistId = al.ArtistId
    LEFT JOIN ""tracks"" AS t ON al.AlbumId = t.AlbumId
   GROUP BY a.Name
   ORDER BY NumTracks DESC
   LIMIT 10",sql
44207df8-4445-501c-b5a1-4edd58372a1d-sql,which table stores customer's orders,"SELECT ""customers"".CustomerId FROM ""customers"" INNER JOIN ""invoices"" ON ""customers"".CustomerId = ""invoices"".CustomerId LIMIT 20",sql
48843492-803c-5369-af8c-06b267009ff0-sql,"
                    Generating SQL for this question:  Get the average invoice total for each customer:
                    results in the following error: [ERROR-SQL] the generated SQL :  Intermediate\_sql: SELECT CustomerId FROM ""invoices""
   SELECT AVG(Total) AS AverageInvoiceTotal, ""customers"".CustomerId
   FROM ""invoices""
   INNER JOIN ""customers"" ON ""invoices"".CustomerId = ""customers"".CustomerId
   GROUP BY ""customers"".CustomerId
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT AVG(Total) AS AverageInvoiceTotal, ""customers"".CustomerId
   FROM ""invoices""
   INNER JOIN ""customers"" ON ""invoices"".CustomerId = ""customers"".CustomerId
   GROUP BY ""customers"".CustomerId LIMIT 20",sql
51dd0a88-bcfc-5e6e-bd91-90755b72640f-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ","SELECT * FROM ""tracks"" WHERE LOWER(Name) LIKE '%what%' LIMIT 20",sql
541da987-5958-53cd-aa08-3b53bf9fa36d-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT ""customers"".CustomerId, COUNT(""invoice_items"".InvoiceLineId) AS TotalAlbumsPurchased
    FROM ""customers""
    INNER JOIN ""invoices"" ON ""customers"".CustomerId = ""invoices"".CustomerId
    INNER JOIN ""invoice_items"" ON ""invoices"".InvoiceId = ""invoice_items"".InvoiceId
    INNER JOIN ""tracks"" ON ""invoice_items"".TrackId = ""tracks"".TrackId
    INNER JOIN ""albums"" ON ""tracks"".AlbumId = ""albums"".AlbumId
    GROUP BY ""customers"".CustomerId
    ORDER BY COUNT(""invoice_items"".InvoiceLineId) DESC
    LIMIT 5;",sql
5553bde8-5fd3-5f6b-8f5f-bcc719ab7eec-sql,"
                    Generating SQL for this question: List all invoices with a total exceeding $10
                    results in the following error: [ERROR-SQL] the generated SQL :  Intermediate_sql: SELECT DISTINCT InvoiceId FROM ""invoices""
   SELECT * FROM ""invoices"" WHERE Total > 10 AND InvoiceId IN (SELECT DISTINCT InvoiceId FROM ""invoices"")
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT * FROM ""invoices"" WHERE Total > 10 LIMIT 20",sql
5986bdaf-c87a-57b7-930b-78b517f3f555-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT PlaylistId, SUM(Milliseconds) as TotalDuration
    FROM playlist_track
    JOIN tracks ON playlist_track.TrackId = tracks.TrackId
    GROUP BY PlaylistId
    HAVING COUNT(*) >= 10 LIMIT 20",sql
847b949f-f170-50bf-b3a2-d96dc1c4e11b-sql,Find the customer with the most invoices ,"SELECT ""customers"".CustomerId, COUNT(""invoices"".InvoiceId) AS NumInvoices
    FROM ""customers""
    JOIN ""invoices"" ON ""customers"".CustomerId = ""invoices"".CustomerId
    GROUP BY ""customers"".CustomerId
    ORDER BY NumInvoices DESC
    LIMIT 1;",sql
8c823fec-920b-5007-9553-be86bd4565c6-sql,List all customers from Canada and their email addresses:,"SELECT ""customers"".FirstName, ""customers"".LastName, ""customers"".Email
   FROM ""customers""
   WHERE ""country"" = 'Canada' LIMIT 20",sql
8f3212d1-31d2-57cf-88f0-2174f5a8c8a9-sql,"
                    Generating SQL for this question: 
                    Generating SQL for this question: Identify artists who have albums with tracks appearing in multiple genres:
                    results in the following error: [ERROR-SQL] the generated SQL : Error running intermediate SQL: Execution failed on sql ' : SELECT DISTINCT ""albums"".ArtistId AS ArtistId FROM ""albums"" INNER JOIN ""tracks"" ON ""albums"".AlbumId = ""tracks"".AlbumId GROUP BY ""albums"".ArtistId HAVING COUNT(DISTINCT ""tracks"".GenreId) > 1

SELECT ""artists"".Name AS ArtistName, COUNT(DISTINCT ""genres"".Name) AS GenreCount FROM ""artists"" INNER JOIN ""albums"" ON ""artists"".ArtistId = ""albums"".ArtistId INNER JOIN ""tracks"" ON ""albums"".AlbumId = ""tracks"".AlbumId INNER JOIN ""genres"" ON ""tracks"".GenreId = ""genres"".GenreId GROUP BY ""artists"".Name HAVING COUNT(DISTINCT ""genres"".Name) > 1': near """": syntax error
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-SQL] the generated SQL : Error running intermediate SQL: Execution failed on sql ' : SELECT DISTINCT ""albums"".ArtistId AS ArtistId FROM ""albums"" INNER JOIN ""tracks"" ON ""albums"".AlbumId = ""tracks"".AlbumId GROUP BY ""albums"".ArtistId HAVING COUNT(DISTINCT ""tracks"".GenreId) > 1

SELECT ""artists"".Name AS ArtistName, COUNT(DISTINCT ""genres"".Name) AS GenreCount FROM ""artists"" INNER JOIN ""albums"" ON ""artists"".ArtistId = ""albums"".ArtistId INNER JOIN ""tracks"" ON ""albums"".AlbumId = ""tracks"".AlbumId INNER JOIN ""genres"" ON ""tracks"".GenreId = ""genres"".GenreId GROUP BY ""artists"".Name HAVING COUNT(DISTINCT ""genres"".Name) > 1': near """": syntax error
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT ""artists"".Name AS ArtistName, COUNT(DISTINCT ""genres"".Name) AS GenreCount
   FROM ""artists""
   INNER JOIN ""albums"" ON ""artists"".ArtistId = ""albums"".ArtistId
   INNER JOIN ""tracks"" ON ""albums"".AlbumId = ""tracks"".AlbumId
   INNER JOIN ""genres"" ON ""tracks"".GenreId = ""genres"".GenreId
   GROUP BY ""artists"".Name
   HAVING COUNT(DISTINCT ""genres"".Name) > 1 LIMIT 20",sql
97504492-da0f-5727-a134-f0b41d593361-sql,"
                    Generating SQL for this question: 
                    Generating SQL for this question: Can you list all tables in the SQLite database catalog?
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                ",SELECT name FROM sqlite_master WHERE type='table' LIMIT 20,sql
9d886cba-f1b1-5341-befc-690273c4a80a-sql,"
                    Generating SQL for this question: Find the total number of invoices per country
                    results in the following error: [ERROR-DB] Failed to execute SQL: SELECT ""countries"".Name AS Country, COUNT(*) AS Count FROM (SELECT DISTINCT ""customers"".Country FROM ""invoices"" INNER JOIN ""customers"" ON ""invoices"".CustomerId = ""customers"".CustomerId) AS countries GROUP BY ""countries"".Name LIMIT 20
 Execution failed on sql 'SELECT ""countries"".Name AS Country, COUNT(*) AS Count FROM (SELECT DISTINCT ""customers"".Country FROM ""invoices"" INNER JOIN ""customers"" ON ""invoices"".CustomerId = ""customers"".CustomerId) AS countries GROUP BY ""countries"".Name LIMIT 20': no such column: countries.Name .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT ""customers"".Country AS Country, COUNT(*) AS Count FROM ""invoices""
INNER JOIN ""customers"" ON ""invoices"".CustomerId = ""customers"".CustomerId
GROUP BY ""customers"".Country
LIMIT 20",sql
9f52b00e-4ebd-5eda-b218-51645a2fbdc1-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table' LIMIT 20,sql
b170d7a5-723d-512e-a2e4-d04ffe05d6f7-sql,Find all invoices since 2010 and the total amount invoiced:,"SELECT InvoiceId, SUM(Total) AS TotalAmount FROM ""invoices"" WHERE InvoiceDate >= '2010-01-01' GROUP BY InvoiceId LIMIT 20",sql
b5ee6ef1-4849-538f-88a7-7c04a7bc0f49-sql,List all genres and the number of tracks in each genre:,"SELECT ""genres"".Name AS GenreName, COUNT(*) AS NumTracks
    FROM ""tracks"" INNER JOIN ""genres"" ON ""tracks"".GenreId = ""genres"".GenreId
   GROUP BY ""genres"".Name
   ORDER BY NumTracks DESC LIMIT 20",sql
b6dbd654-bcc0-5b81-8513-450340b64fa0-sql,"
                    Generating SQL for this question: 
                    Generating SQL for this question: what are the top 5 countries that customers come from?
                    results in the following error: [ERROR-SQL] the generated SQL :  Intermediate_sql: SELECT DISTINCT Country FROM ""customers"" LIMIT 20

    SELECT COUNT(*) AS Count, Country FROM (SELECT DISTINCT Country FROM ""customers"") GROUP BY Country ORDER BY Count DESC LIMIT 5
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-SQL] the generated SQL :  Intermediate_sql: SELECT DISTINCT Country FROM ""customers"" LIMIT 20

    SELECT COUNT(*) AS Count, Country FROM (SELECT DISTINCT Country FROM ""customers"") GROUP BY Country ORDER BY Count DESC LIMIT 5
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT COUNT(*) AS Count, Country FROM (SELECT DISTINCT country FROM ""customers"") GROUP BY Country ORDER BY Count DESC LIMIT 5;",sql
bd9535df-1970-5e9c-a75c-96203102ba8f-sql,Get the total number of invoices for each customer,"SELECT CustomerId, COUNT(InvoiceId) AS TotalInvoices FROM ""invoices"" GROUP BY CustomerId LIMIT 20",sql
be3d22ac-27a2-5ed4-9f2d-77409af35067-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT * FROM ""tracks"" ORDER BY UnitPrice DESC LIMIT 5",sql
c235aab4-9447-5e50-b45b-603eb8ec21f4-sql,"
                    Generating SQL for this question: Find the customer who bought the most albums in total quantity (across all invoices):
                    results in the following error: [ERROR-DB] Failed to execute SQL: SELECT ""customers"".* FROM ""customers"" WHERE ""customers"".CustomerId = (SELECT DISTINCT ""customers"".CustomerId FROM ""invoices"" JOIN ""invoice_items"" ON ""invoices"".InvoiceId = ""invoice_items"".InvoiceId JOIN ""tracks"" ON ""invoice_items"".TrackId = ""tracks"".TrackId JOIN ""albums"" ON ""tracks"".AlbumId = ""albums"".AlbumId GROUP BY ""customers"".CustomerId ORDER BY COUNT(*) DESC LIMIT 1);
 Execution failed on sql 'SELECT ""customers"".* FROM ""customers"" WHERE ""customers"".CustomerId = (SELECT DISTINCT ""customers"".CustomerId FROM ""invoices"" JOIN ""invoice_items"" ON ""invoices"".InvoiceId = ""invoice_items"".InvoiceId JOIN ""tracks"" ON ""invoice_items"".TrackId = ""tracks"".TrackId JOIN ""albums"" ON ""tracks"".AlbumId = ""albums"".AlbumId GROUP BY ""customers"".CustomerId ORDER BY COUNT(*) DESC LIMIT 1);': no such column: customers.CustomerId .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT ""customers"".CustomerId, COUNT(""invoice_items"".InvoiceLineId) AS TotalAlbumsPurchased
    FROM ""customers""
    INNER JOIN ""invoices"" ON ""customers"".CustomerId = ""invoices"".CustomerId
    INNER JOIN ""invoice_items"" ON ""invoices"".InvoiceId = ""invoice_items"".InvoiceId
    INNER JOIN ""tracks"" ON ""invoice_items"".TrackId = ""tracks"".TrackId
    INNER JOIN ""albums"" ON ""tracks"".AlbumId = ""albums"".AlbumId
    GROUP BY ""customers"".CustomerId
    ORDER BY COUNT(""invoice_items"".InvoiceLineId) DESC
    LIMIT 1;",sql
cc544863-5a1f-5b61-8e32-89f5335003b5-sql,"
                    Generating SQL for this question: Can you list all tables in the SQLite database catalog?
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                ",SELECT name FROM sqlite_master WHERE type='table' LIMIT 20;,sql
f8b188d5-0b46-551e-a30a-4ef045dd70a9-sql,List all albums and their corresponding artist names  ,"SELECT ""albums"".AlbumId, ""albums"".Title, ""artists"".Name AS ArtistName
   FROM ""albums""
   INNER JOIN ""artists"" ON ""albums"".ArtistId = ""artists"".ArtistId LIMIT 20",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
