id,question,content,training_data_type
04505c33-7bf5-5004-a52c-0762a4ac7b30-sql,Identify artists who have albums with tracks appearing in multiple genres:,SELECT DISTINCT T3.Name FROM tracks AS T1 INNER JOIN albums AS T2 ON T1.AlbumId = T2.AlbumId INNER JOIN artists AS T3 ON T2.ArtistId = T3.ArtistId GROUP BY T1.AlbumId HAVING COUNT(DISTINCT T1.GenreId) > 1 LIMIT 20;,sql
04a71f40-f42c-5490-b0c7-296458ed9e31-sql,Find all invoices since 2010 and the total amount invoiced:,"SELECT COUNT(*) , SUM(Total) FROM invoices WHERE STRFTIME('%Y', InvoiceDate) >= '2010' LIMIT 20",sql
14ce3678-41f3-5ee8-9b75-71cc5297121e-sql, Get the average invoice total for each customer:,"SELECT CustomerId, AVG(Total) FROM invoices GROUP BY CustomerId LIMIT 20",sql
198be005-3d10-5b95-8e39-9a73ae76e6bc-sql,List all invoices with a total exceeding $10,SELECT * FROM invoices WHERE Total > 10 LIMIT 20,sql
217dc150-a5e3-585a-b4fb-75efada9a193-sql,Find the customer who bought the most albums in total quantity (across all invoices):,"SELECT CustomerId, SUM(Quantity) FROM invoice_items INNER JOIN invoices ON invoice_items.InvoiceId = invoices.InvoiceId GROUP BY CustomerId ORDER BY SUM(Quantity) DESC LIMIT 1;",sql
23da38f5-d168-5969-91b0-8ffc888a8a41-sql,"
                    Generating SQL for this question: which table stores customer's orders
                    results in the following error: [ERROR-SQL] the generated SQL : The 'invoices' table stores information about customer orders.
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                ",SELECT * FROM invoices LIMIT 20,sql
3359adcf-7e85-5ea8-8f38-821efae23710-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT PlaylistId , SUM(Milliseconds) AS TotalDuration FROM playlist_track INNER JOIN tracks ON playlist_track.TrackId = tracks.TrackId GROUP BY PlaylistId HAVING COUNT(*) >= 10 LIMIT 20;",sql
3573cc12-226d-594d-b18e-59b7a60974e9-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT Name, UnitPrice FROM tracks ORDER BY UnitPrice DESC LIMIT 5",sql
362e1e01-4245-58a1-a868-b3911770f4d4-sql,List all genres and the number of tracks in each genre:,"SELECT G.Name , COUNT(T.TrackId) FROM genres AS G INNER JOIN tracks AS T ON G.GenreId = T.GenreId GROUP BY G.Name ORDER BY COUNT(T.TrackId) DESC LIMIT 20;",sql
40f40580-4b7b-55a3-9bca-5a7d0fd872b2-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ","SELECT Name FROM tracks WHERE Name LIKE ""%What%"" LIMIT 20",sql
608f719a-fe7b-55d0-a3d4-9e2f866de148-sql,List all customers from Canada and their email addresses:,"SELECT FirstName , LastName , Email FROM customers WHERE Country = 'Canada' LIMIT 20",sql
63a33c8b-9658-5549-913e-e6686c592c8c-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT CustomerId , SUM(Quantity) FROM invoice_items INNER JOIN invoices ON invoice_items.InvoiceId = invoices.InvoiceId GROUP BY CustomerId ORDER BY SUM(Quantity) DESC LIMIT 5;",sql
714b9008-d79f-50ac-941a-fb0b4c724bf3-sql,Get the total number of invoices for each customer,"SELECT CustomerId, COUNT(InvoiceId) AS TotalInvoices 
FROM invoices 
GROUP BY CustomerId LIMIT 20",sql
71785984-4487-57cc-8260-cc788728f771-sql,Find the total number of invoices per country,"SELECT BillingCountry , COUNT(*) FROM invoices GROUP BY BillingCountry ORDER BY COUNT(*) DESC LIMIT 10;",sql
7716ef21-45fc-5078-b74f-bdee432df584-sql,what are the top 5 countries that customers come from?,"SELECT Country, COUNT(CustomerId) AS CustomerCount 
FROM customers 
GROUP BY Country 
ORDER BY CustomerCount DESC 
LIMIT 5;",sql
865096e7-2929-5965-b0a1-4d8536e52f5a-sql," 
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    ","SELECT T3.Name , COUNT(T1.TrackId) FROM tracks AS T1 INNER JOIN albums AS T2 ON T1.AlbumId = T2.AlbumId INNER JOIN artists AS T3 ON T2.ArtistId = T3.ArtistId GROUP BY T3.Name ORDER BY COUNT(T1.TrackId) DESC LIMIT 10;",sql
9cf7eb45-5b77-5af0-9b80-4b7e7fc9c40c-sql,Find the customer with the most invoices ,"SELECT CustomerId, COUNT(*) AS InvoiceCount 
FROM invoices 
GROUP BY CustomerId 
ORDER BY InvoiceCount DESC 
LIMIT 1;",sql
9e4458a1-b28d-53e8-a8ba-3679ed3b4b26-sql,List all albums and their corresponding artist names  ,"SELECT T1.Title, T2.Name FROM albums AS T1 INNER JOIN artists AS T2 ON T1.ArtistId = T2.ArtistId LIMIT 20",sql
9f52b00e-4ebd-5eda-b218-51645a2fbdc1-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table' LIMIT 20,sql
a3146099-61f5-5038-a674-df567fd9ffe0-sql,How many customers are there,SELECT COUNT(CustomerId) FROM customers LIMIT 20,sql
b76ae616-08ce-5a7d-9f16-676841b84d1b-sql,List all employees and their reporting manager's name (if any):,"SELECT T1.FirstName , T1.LastName, T2.Title FROM employees AS T1 INNER JOIN employees AS T2 ON T1.ReportsTo = T2.EmployeeId WHERE T2.Title != 'Sales Support Agent' LIMIT 20",sql
f08e816a-3993-563c-b136-b07134ffff5c-sql,"  
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    ","SELECT CustomerId , SUM(Total) FROM invoices GROUP BY CustomerId ORDER BY SUM(Total) DESC LIMIT 5;",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
