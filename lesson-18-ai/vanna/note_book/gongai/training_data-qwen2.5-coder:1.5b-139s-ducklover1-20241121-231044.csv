id,question,content,training_data_type
00118ff2-e744-57be-8deb-9ba68ca3fcb1-sql,"
                    Generating SQL for this question: 
                    Generating SQL for this question: 
                    Generating SQL for this question: List all employees and their reporting manager's name (if any):
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT T1.FirstName ,  T1.LastName ,  T2.FirstName ,  T2.LastName FROM employees AS T1 INNER JOIN employees AS T2 ON T1.ReportsTo = T2.EmployeeId ORDER BY T1.FirstName ,  T1.LastName LIMIT 20",sql
09b5c84c-abca-5731-af61-7d148c5bd42f-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table' ORDER BY name LIMIT 20,sql
198be005-3d10-5b95-8e39-9a73ae76e6bc-sql,List all invoices with a total exceeding $10,SELECT * FROM invoices WHERE Total > 10 LIMIT 20,sql
25b6b0b9-6352-55e8-9b3e-367726ab2661-sql,"
                    Generating SQL for this question: which table stores customer's orders
                    results in the following error: [ERROR-SQL] the generated SQL : The invoices table stores the customer's orders.
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                ",SELECT * FROM invoices LIMIT 20,sql
277b70ca-2ba0-55ae-842f-1f85c75f2845-sql,Find the customer with the most invoices ,"SELECT FirstName ,  LastName FROM customers WHERE CustomerId IN ( SELECT CustomerId FROM invoices GROUP BY CustomerId ORDER BY COUNT(*) DESC LIMIT 1 )",sql
335140a4-7979-5d70-9455-a19b3107a378-sql,"
                    Generating SQL for this question: 
                    Generating SQL for this question: List all employees and their reporting manager's name (if any):
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT T1.FirstName ,  T1.LastName ,  T2.FirstName ,  T2.LastName FROM employees AS T1 INNER JOIN employees AS T2 ON T1.ReportsTo = T2.EmployeeId ORDER BY T1.FirstName ,  T1.LastName LIMIT 20",sql
42264f7f-7ffe-5240-bba3-2bd5ed49cfdb-sql,List all employees and their reporting manager's name (if any):,"SELECT T1.FirstName ,  T1.LastName ,  T2.FirstName ,  T2.LastName FROM employees AS T1 INNER JOIN employees AS T2 ON T1.ReportsTo = T2.EmployeeId ORDER BY T1.FirstName ,  T1.LastName LIMIT 20",sql
460bcdd8-5c7e-5d72-a47c-2a22c45c6b72-sql,Identify artists who have albums with tracks appearing in multiple genres:,SELECT T2.Name FROM albums AS T1 INNER JOIN artists AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.AlbumId IN ( SELECT AlbumId FROM tracks GROUP BY AlbumId HAVING COUNT(DISTINCT GenreId) > 1 ) LIMIT 20,sql
51d90e46-63db-5a81-be60-eb330cf8e654-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT Name ,  UnitPrice FROM tracks GROUP BY Name ORDER BY UnitPrice DESC LIMIT 5",sql
5e526ae4-4473-5cc5-9185-b16c465687c0-sql,How many customers are there,SELECT COUNT(*) FROM customers LIMIT 20,sql
60df0142-909c-5df9-9f7a-04f5c8737fcb-sql,"
                    Generating SQL for this question: 
                    Generating SQL for this question: 
                    Generating SQL for this question: List all customers who have not placed any orders:
                    results in the following error: [ERROR-DF] Invalid dataframe .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-DF] Invalid dataframe .
                    Can you try to fix the error and re-generate the SQL statement?
                
                    results in the following error: [ERROR-DF] Invalid dataframe .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT count(*) ,  * FROM customers WHERE customerid NOT IN ( SELECT customerid FROM invoices ) LIMIT 20",sql
65e777c7-6656-56b2-9647-8a799eca6a48-sql,List all genres and the number of tracks in each genre:,"SELECT T1.Name ,  COUNT(T1.GenreId) FROM tracks AS T1 JOIN genres AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.Name ORDER BY Count(*) LIMIT 20",sql
69a621d6-81ef-594e-8d74-3c4f38540b26-sql,"
                    Generating SQL for this question:  Get the average invoice total for each customer:
                    results in the following error: [ERROR-DB] Failed to execute SQL: SELECT AVG(Total) ,  CustomerId FROM invoices GROUP BY CustomerId ORDER BY Average(Total) DESC LIMIT 20
 Execution failed on sql 'SELECT AVG(Total) ,  CustomerId FROM invoices GROUP BY CustomerId ORDER BY Average(Total) DESC LIMIT 20': no such function: Average .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT avg(total) ,  customerid FROM invoices GROUP BY customerid ORDER BY avg(total) DESC LIMIT 20",sql
6bc344ae-910f-5d9e-acc5-f5ed48ee0be6-sql,what are the top 5 countries that customers come from?,SELECT country FROM customers GROUP BY country ORDER BY count(*) DESC LIMIT 5,sql
8a4b9119-c780-5b2d-abae-234da7604507-sql,"
                    Generating SQL for this question: List all employees and their reporting manager's name (if any):
                    results in the following error: [ERROR-VIZ] Failed to visualize df with plotly:
 str(e) .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT T1.FirstName ,  T1.LastName ,  T2.FirstName ,  T2.LastName FROM employees AS T1 INNER JOIN employees AS T2 ON T1.ReportsTo = T2.EmployeeId ORDER BY T1.FirstName ,  T1.LastName LIMIT 20",sql
8d19e614-4065-580b-851c-29dea7787c93-sql,"
                    Generating SQL for this question:   
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    
                    results in the following error: [ERROR-DB] Failed to execute SQL: SELECT FirstName ,  LastName FROM customers WHERE CustomerId IN ( SELECT CustomerId FROM invoices GROUP BY CustomerId ORDER BY SUM(UnitPrice * Quantity) DESC LIMIT 5 )
 Execution failed on sql 'SELECT FirstName ,  LastName FROM customers WHERE CustomerId IN ( SELECT CustomerId FROM invoices GROUP BY CustomerId ORDER BY SUM(UnitPrice * Quantity) DESC LIMIT 5 )': no such column: UnitPrice .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT FirstName ,  LastName FROM customers WHERE CustomerId IN ( SELECT customerid FROM invoices GROUP BY CustomerId ORDER BY SUM(Total) DESC LIMIT 5 )",sql
aad4b7ff-ac90-5ae5-9d04-55a7b39b3970-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ",SELECT * FROM tracks WHERE LOWER(Name) LIKE '%what%' LIMIT 20,sql
aec4405b-5fd5-51b5-bc9d-2026d06fbc0e-sql,Get the total number of invoices for each customer,"SELECT COUNT(*) ,  CustomerId FROM invoices GROUP BY CustomerId ORDER BY CustomerId LIMIT 20",sql
cea3b6c3-ef2e-5a96-9211-8710d42a8d0c-sql,Find the total number of invoices per country,"SELECT COUNT(*) ,  billingcountry FROM invoices GROUP BY BillingCountry ORDER BY BillingCountry LIMIT 20",sql
ec8d2e71-9cc2-51eb-be74-803cd7cf74dd-sql,Find all invoices since 2010 and the total amount invoiced:,SELECT * FROM invoices WHERE InvoiceDate >= '2010-01-01' GROUP BY Total LIMIT 20,sql
f865d9db-0f90-5ed5-a8f5-a20811188361-sql,List all albums and their corresponding artist names  ,"SELECT T1.Title, T2.Name FROM albums AS T1 INNER JOIN artists AS T2 ON T1.ArtistId = T2.ArtistId ORDER BY T1.Title LIMIT 20",sql
f9b6b603-e977-5361-a345-1b2b2eb17476-sql,List all customers from Canada and their email addresses:,"SELECT firstname ,  lastname ,  email FROM customers WHERE country = 'Canada' ORDER BY firstname ,  lastname LIMIT 20",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
