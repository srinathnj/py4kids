id,question,content,training_data_type
043f0802-2d5a-51e2-9389-dcb4e774f4d0-sql,Get the total number of invoices for each customer,"SELECT CustomerId, COUNT(*) AS NumberOfInvoices FROM invoices GROUP BY CustomerId LIMIT 20",sql
05cf6aab-30a9-5fd2-bf90-943b0a7f08c6-sql,"
                    For this question:  
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    , 
                    your generated SQL statement: SELECT T1.Name, COUNT(T2.TrackId) AS NumberOfTracks FROM artists AS T1 INNER JOIN albums AS T2 ON T1.ArtistId = T2.ArtistId INNER JOIN tracks AS T3 ON T2.AlbumId = T3.AlbumId GROUP BY T1.Name ORDER BY NumberOfTracks DESC LIMIT 10 results in the following error: [ERROR-DB] Failed to execute SQL: SELECT T1.Name, COUNT(T2.TrackId) AS NumberOfTracks FROM artists AS T1 INNER JOIN albums AS T2 ON T1.ArtistId = T2.ArtistId INNER JOIN tracks AS T3 ON T2.AlbumId = T3.AlbumId GROUP BY T1.Name ORDER BY NumberOfTracks DESC LIMIT 10
 Execution failed on sql 'SELECT T1.Name, COUNT(T2.TrackId) AS NumberOfTracks FROM artists AS T1 INNER JOIN albums AS T2 ON T1.ArtistId = T2.ArtistId INNER JOIN tracks AS T3 ON T2.AlbumId = T3.AlbumId GROUP BY T1.Name ORDER BY NumberOfTracks DESC LIMIT 10': no such column: T2.TrackId .
                    Can you please fix this error and re-generate the SQL statement?
                ","SELECT T1.Name, COUNT(T3.AlbumID) AS NumberOfTracks FROM artists AS T1 INNER JOIN albums AS T2 ON T1.ArtistId = T2.ArtistId INNER JOIN tracks AS T3 ON T2.AlbumId = T3.AlbumId GROUP BY T1.Name ORDER BY NumberOfTracks DESC LIMIT 10",sql
15aac60e-cb46-5006-b812-57ce43a744d4-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ",SELECT * FROM tracks WHERE Name LIKE '%What%' COLLATE NOCASE LIMIT 20,sql
198be005-3d10-5b95-8e39-9a73ae76e6bc-sql,List all invoices with a total exceeding $10,SELECT * FROM invoices WHERE Total > 10 LIMIT 20,sql
1e21a9ef-b5c5-5756-9512-012bd52ba828-sql,List all employees and their reporting manager's name (if any):,"SELECT e.FirstName || ' ' || e.LastName AS Employee, m.FirstName || ' ' || m.LastName AS Manager FROM employees e LEFT JOIN employees m ON e.ReportsTo = m.EmployeeId LIMIT 20",sql
2e0b40fc-8683-5255-9930-83b6708ae0b6-sql,"
                    For this question: Find the customer who bought the most albums in total quantity (across all invoices):, 
                    your generated SQL statement: SELECT c.FirstName, c.LastName, SUM(i.Quantity) as TotalQuantity FROM customers AS c JOIN invoices AS i ON c.CustomerId = i.CustomerId JOIN invoice_items AS ii ON i.InvoiceId = ii.InvoiceId WHERE ii.UnitPrice > 10 GROUP BY c.CustomerId ORDER BY TotalQuantity DESC LIMIT 1 results in the following error: [ERROR-DB] Failed to execute SQL: SELECT c.FirstName, c.LastName, SUM(i.Quantity) as TotalQuantity FROM customers AS c JOIN invoices AS i ON c.CustomerId = i.CustomerId JOIN invoice_items AS ii ON i.InvoiceId = ii.InvoiceId WHERE ii.UnitPrice > 10 GROUP BY c.CustomerId ORDER BY TotalQuantity DESC LIMIT 1
 Execution failed on sql 'SELECT c.FirstName, c.LastName, SUM(i.Quantity) as TotalQuantity FROM customers AS c JOIN invoices AS i ON c.CustomerId = i.CustomerId JOIN invoice_items AS ii ON i.InvoiceId = ii.InvoiceId WHERE ii.UnitPrice > 10 GROUP BY c.CustomerId ORDER BY TotalQuantity DESC LIMIT 1': no such column: i.Quantity .
                    Can you please fix this error and re-generate the SQL statement?
                ","SELECT T2.FirstName, T2.LastName, SUM(T3.Quantity) as TotalQuantity FROM invoices AS T1 JOIN customers AS T2 ON T1.CustomerId = T2.CustomerId JOIN invoice_items AS T3 ON T1.InvoiceId = T3.InvoiceId GROUP BY T2.CustomerId ORDER BY TotalQuantity DESC LIMIT 1",sql
2f4771cd-5fb2-5c41-b474-82b3201e4ea0-sql,List all genres and the number of tracks in each genre:,"SELECT T1.Name, COUNT(T2.GenreId) AS NumberOfTracks FROM genres AS T1 INNER JOIN tracks AS T2 ON T1.GenreId = T2.GenreId GROUP BY T1.Name LIMIT 20",sql
338220d2-e7c5-50c2-a789-f05be94770c6-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT T2.FirstName, T2.LastName, SUM(T3.Quantity) as TotalQuantity FROM invoices AS T1 JOIN customers AS T2 ON T1.CustomerId = T2.CustomerId JOIN invoice_items AS T3 ON T1.InvoiceId = T3.InvoiceId GROUP BY T2.CustomerId ORDER BY TotalQuantity DESC LIMIT 5",sql
3497e46f-9294-5380-8363-8234687dd5a6-sql, Get the average invoice total for each customer:,"SELECT CustomerId, AVG(Total) AS AverageInvoiceTotal FROM invoices GROUP BY CustomerId LIMIT 20",sql
3573cc12-226d-594d-b18e-59b7a60974e9-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT Name, UnitPrice FROM tracks ORDER BY UnitPrice DESC LIMIT 5",sql
3d92cf57-380e-57d8-8389-97f088239f99-sql,"  
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    ","SELECT c.FirstName, c.LastName, SUM(i.Total) as TotalSpent FROM customers AS c JOIN invoices AS i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId ORDER BY TotalSpent DESC LIMIT 5",sql
4f13bc73-ff2d-59b9-a6a1-3327d5505e7b-sql,Find all invoices since 2010 and the total amount invoiced:,"SELECT InvoiceDate, SUM(Total) AS TotalAmount FROM invoices WHERE strftime('%Y', InvoiceDate) = '2010' GROUP BY InvoiceDate LIMIT 20",sql
6b30401c-4178-5d83-83da-c8846995fc59-sql,Find the total number of invoices per country,"SELECT BillingCountry, COUNT(*) AS TotalInvoices FROM invoices GROUP BY BillingCountry LIMIT 20",sql
94534b51-85ea-56f1-b2c9-23741c941085-sql,what are the top 5 countries that customers come from?,"SELECT Country, COUNT(*) AS NumberOfCustomers FROM customers GROUP BY Country ORDER BY NumberOfCustomers DESC LIMIT 5",sql
9f52b00e-4ebd-5eda-b218-51645a2fbdc1-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table' LIMIT 20,sql
a3146099-61f5-5038-a674-df567fd9ffe0-sql,How many customers are there,SELECT COUNT(CustomerId) FROM customers LIMIT 20,sql
bdd113a2-2f56-5596-8d4b-e8e733f5cd4b-sql,List all albums and their corresponding artist names  ,"SELECT T1.Title, T3.Name FROM albums AS T1 INNER JOIN artists AS T3 ON T1.ArtistId = T3.ArtistId LIMIT 20",sql
df67ac5f-96e6-5809-bfd1-cf71a41cbf4f-sql,"
                    For this question: which table stores customer's orders, 
                    your generated SQL statement: The 'invoices' table stores customer's orders, which are referred to as invoices in this context. results in the following error: [ERROR-SQL] the generated SQL : The 'invoices' table stores customer's orders, which are referred to as invoices in this context.
 does not starts with ('select','with') .
                    Can you please fix this error and re-generate the SQL statement?
                ",SELECT InvoiceId FROM invoices LIMIT 20,sql
e1d734aa-c25e-5bf8-bdb2-f4bad01060a8-sql,List all customers from Canada and their email addresses:,"SELECT FirstName || ' ' || LastName AS FullName, Email FROM customers WHERE Country = 'Canada' LIMIT 20",sql
eafa8520-c63b-5828-829c-25ef6f0d157e-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT T1.Name, SUM(T3.Milliseconds) / 60000 AS TotalDurationMinutes FROM playlists AS T1 INNER JOIN playlist_track AS T2 ON T1.PlaylistId = T2.PlaylistId INNER JOIN tracks AS T3 ON T2.TrackId = T3.TrackId GROUP BY T1.PlaylistId HAVING COUNT(T2.TrackId) >= 10 LIMIT 20",sql
edac3d46-f3c9-5f8f-b5e4-453ad0f72a25-sql,Find the customer with the most invoices ,"SELECT c.FirstName, c.LastName, COUNT(i.InvoiceId) AS NumberOfInvoices FROM customers c JOIN invoices i ON c.CustomerId = i.CustomerId GROUP BY c.CustomerId ORDER BY NumberOfInvoices DESC LIMIT 1",sql
f1e42db0-63d6-51ec-a5ad-e31c68ee2755-sql,Identify artists who have albums with tracks appearing in multiple genres:,SELECT T1.Name FROM artists AS T1 INNER JOIN albums AS T2 ON T1.ArtistId = T2.ArtistId INNER JOIN tracks AS T3 ON T2.AlbumId = T3.AlbumId WHERE T3.GenreId IN ( SELECT GenreId FROM tracks GROUP BY GenreId HAVING COUNT(DISTINCT AlbumId) > 1 ) LIMIT 20,sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
