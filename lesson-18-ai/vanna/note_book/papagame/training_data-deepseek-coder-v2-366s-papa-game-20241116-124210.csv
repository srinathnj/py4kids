id,question,content,training_data_type
0a39f28e-4263-5d39-99c9-d3384f17923b-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT c.CustomerId, c.FirstName, c.LastName, SUM(ii.Quantity) AS TotalAlbumQuantity
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
JOIN invoice_items ii ON i.InvoiceId = ii.InvoiceId
GROUP BY c.CustomerId
ORDER BY TotalAlbumQuantity DESC
LIMIT 5;",sql
3839630a-e1a3-5502-89cc-0ec879997c30-sql,"
                    For this question: 
                    For this question: Find all tracks with a name containing ""What"" (case-insensitive) , 
                    your generated SQL statement: SELECT * 
FROM tracks
WHERE LOWER(TrackName) LIKE '%what%' LIMIT 20; results in the following error: [ERROR-DB] Failed to execute SQL: SELECT * 
FROM tracks
WHERE LOWER(TrackName) LIKE '%what%' LIMIT 20;
 Execution failed on sql 'SELECT * 
FROM tracks
WHERE LOWER(TrackName) LIKE '%what%' LIMIT 20;': no such column: TrackName .
                    Can you please fix this error and re-generate the SQL statement?
                , 
                    your generated SQL statement: with a name containing ""What"" (case-insensitive):

```sql
SELECT * 
FROM tracks
WHERE LOWER(Name) LIKE '%what%' LIMIT 20; results in the following error: [ERROR-DB] Failed to execute SQL: with a name containing ""What"" (case-insensitive):

```sql
SELECT * 
FROM tracks
WHERE LOWER(Name) LIKE '%what%' LIMIT 20;
 Execution failed on sql 'with a name containing ""What"" (case-insensitive):

```sql
SELECT * 
FROM tracks
WHERE LOWER(Name) LIKE '%what%' LIMIT 20;': near ""name"": syntax error .
                    Can you please fix this error and re-generate the SQL statement?
                ","SELECT * 
FROM tracks
WHERE LOWER(Name) LIKE '%what%' LIMIT 20;",sql
3bbee3e2-ea7d-50ef-8f9e-0c6b284ea364-sql, Get the average invoice total for each customer:,"SELECT c.CustomerId, c.FirstName, c.LastName, AVG(i.Total) AS AverageInvoiceTotal
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.CustomerId, c.FirstName, c.LastName LIMIT 20;",sql
40664a1e-4daa-5b18-a0ef-5cf6e676ab0a-sql,How many customers are there,"SELECT COUNT(*) AS NumberOfCustomers
FROM customers LIMIT 20",sql
4320a67a-8f4c-59c5-a234-8e23b72e6129-sql," 
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    ","SELECT a.Name AS ArtistName, COUNT(t.TrackId) AS NumberOfTracks
FROM artists a
JOIN albums al ON a.ArtistId = al.ArtistId
JOIN tracks t ON al.AlbumId = t.AlbumId
GROUP BY a.ArtistId
ORDER BY NumberOfTracks DESC
LIMIT 10;",sql
5c1ec1dd-ad4a-57ba-9131-db2f22ad3e96-sql,Get the total number of invoices for each customer,"SELECT c.CustomerId, c.FirstName, c.LastName, COUNT(i.InvoiceId) AS TotalInvoices
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.CustomerId, c.FirstName, c.LastName LIMIT 20",sql
64c7c4d1-d0b7-5c2b-baaa-cb5827bfad67-sql,Find the top 5 most expensive tracks (based on unit price):,"SELECT Name, UnitPrice
FROM tracks
ORDER BY UnitPrice DESC
LIMIT 5;",sql
69ef6f1e-6e76-5e25-a5fa-d92cb77cde0f-sql,List all genres and the number of tracks in each genre:,"SELECT g.Name AS GenreName, COUNT(t.TrackId) AS NumberOfTracks
FROM genres g
LEFT JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.GenreId, g.Name ORDER BY NumberOfTracks DESC LIMIT 20;",sql
78c94286-7fe9-53d6-ae67-158ce3a7639a-sql,"
                    For this question: 
                    For this question:   
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    , 
                    your generated SQL statement: None results in the following error: [ERROR-SQL] Failed to generate SQL for prompt:   
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
     with the following exception: 
an unknown error was encountered while running the model  .
                    Can you please fix this error and re-generate the SQL statement?
                , 
                    your generated SQL statement: None results in the following error: [ERROR-SQL] Failed to generate SQL for prompt: 
                    For this question:   
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    , 
                    your generated SQL statement: None results in the following error: [ERROR-SQL] Failed to generate SQL for prompt:   
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
     with the following exception: 
an unknown error was encountered while running the model  .
                    Can you please fix this error and re-generate the SQL statement?
                 with the following exception: 
an unknown error was encountered while running the model  .
                    Can you please fix this error and re-generate the SQL statement?
                ","SELECT c.CustomerId, c.FirstName, c.LastName, SUM(i.Total) AS TotalSpent
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.CustomerId
ORDER BY TotalSpent DESC
LIMIT 5;",sql
83199c55-763a-5fa0-b134-f2420364aabd-sql,List all customers from Canada and their email addresses:,"SELECT FirstName, LastName, Email
FROM customers
WHERE Country = 'Canada' ORDER BY LastName, FirstName LIMIT 20;",sql
87b63370-52c1-556e-908c-c6cd29db472e-sql,List all albums and their corresponding artist names  ,"SELECT a.Title AS AlbumTitle, ar.Name AS ArtistName
FROM albums a
JOIN artists ar ON a.ArtistId = ar.ArtistId LIMIT 20",sql
95ac9643-9f7a-5332-8fa8-88e105ae3126-sql,Find the customer with the most invoices ,"SELECT c.CustomerId, c.FirstName, c.LastName, COUNT(i.InvoiceId) AS TotalInvoices
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.CustomerId
ORDER BY TotalInvoices DESC
LIMIT 1;",sql
9f52b00e-4ebd-5eda-b218-51645a2fbdc1-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table' LIMIT 20,sql
aa432820-e2ba-5a21-bd75-5aba758b1e8f-sql,Find the total number of invoices per country,"SELECT BillingCountry, COUNT(*) AS TotalInvoices
FROM invoices
GROUP BY BillingCountry ORDER BY TotalInvoices DESC LIMIT 20;",sql
b71d7700-46fe-5441-8eb5-571740bfae9a-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT p.PlaylistId, p.Name AS PlaylistName, SUM(t.Milliseconds) AS TotalDuration
FROM playlists p
JOIN playlist_track pt ON p.PlaylistId = pt.PlaylistId
JOIN tracks t ON pt.TrackId = t.TrackId
GROUP BY p.PlaylistId
HAVING COUNT(pt.TrackId) >= 10 LIMIT 20",sql
c0b0d88d-295b-5e3d-86f4-0bd81bd1cf70-sql,List all invoices with a total exceeding $10,"SELECT *
FROM invoices
WHERE Total > 10 ORDER BY Total DESC LIMIT 20;",sql
c2cd0665-bbc3-562d-9f46-33e0edaf7937-sql,what are the top 5 countries that customers come from?,"SELECT Country, COUNT(*) AS CustomerCount
FROM customers
GROUP BY Country
ORDER BY CustomerCount DESC
LIMIT 5;",sql
f92852ea-8a9d-50c8-8901-ee3e570eb872-sql,List all employees and their reporting manager's name (if any):,"SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, m.FirstName || ' ' || m.LastName AS ManagerName
FROM employees e
LEFT JOIN employees m ON e.ReportsTo = m.EmployeeId LIMIT 20;",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
ece10d36-9223-5045-9ac8-4b5bc090acb5-doc,,"
    In the 'customers' table, address column names do not have 'Billing' prefix, 
    e.g. country column name is 'country', not 'BillingCountry'
    ",documentation
