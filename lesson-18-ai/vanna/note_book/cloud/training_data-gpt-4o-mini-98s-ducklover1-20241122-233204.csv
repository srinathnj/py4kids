id,question,content,training_data_type
092be065-5a42-591f-9079-33f77a74fc31-sql,Find the top 5 most expensive tracks (based on unit price):,SELECT * FROM tracks ORDER BY UnitPrice DESC LIMIT 5;,sql
15aac60e-cb46-5006-b812-57ce43a744d4-sql,"Find all tracks with a name containing ""What"" (case-insensitive) ",SELECT * FROM tracks WHERE Name LIKE '%What%' COLLATE NOCASE LIMIT 20,sql
1a6d0ce7-c5c3-5622-9a44-d19db18288fe-sql,Get all playlists containing at least 10 tracks and the total duration of those tracks:,"SELECT playlist_track.PlaylistId, SUM(tracks.Milliseconds) AS TotalDuration 
FROM playlist_track 
JOIN tracks ON playlist_track.TrackId = tracks.TrackId 
GROUP BY playlist_track.PlaylistId 
HAVING COUNT(playlist_track.TrackId) >= 10 LIMIT 20",sql
1cdc61ff-fe82-5418-9417-25f0ccfcff02-sql,Get the total number of invoices for each customer,"SELECT CustomerId, COUNT(*) AS InvoiceCount 
FROM invoices 
GROUP BY CustomerId LIMIT 20",sql
22e31cff-a161-587a-bf95-222e94413bdf-sql,List all employees and their reporting manager's name (if any):,"SELECT e.FirstName || ' ' || e.LastName AS EmployeeName, 
       m.FirstName || ' ' || m.LastName AS ManagerName 
FROM employees e 
LEFT JOIN employees m ON e.ReportsTo = m.EmployeeId LIMIT 20",sql
2438c4b9-c85c-550f-b7f3-42ebc30cfefa-sql, Get the average invoice total for each customer:,"SELECT CustomerId, AVG(Total) AS AverageInvoiceTotal 
FROM invoices 
GROUP BY CustomerId LIMIT 20",sql
2dfa865d-7ee3-5bef-aec3-2e7d19476ef5-sql,what are the top 5 countries that customers come from?,"SELECT BillingCountry, COUNT(*) AS CustomerCount 
FROM invoices 
GROUP BY BillingCountry 
ORDER BY CustomerCount DESC 
LIMIT 5;",sql
54a9bc98-ff0e-5f0a-9fa4-146db29c6c3a-sql,Find the customer who bought the most albums in total quantity (across all invoices):,"SELECT invoices.CustomerId, SUM(invoice_items.Quantity) AS TotalAlbums 
FROM invoices 
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId 
JOIN tracks ON invoice_items.TrackId = tracks.TrackId 
WHERE tracks.AlbumId IS NOT NULL 
GROUP BY invoices.CustomerId 
ORDER BY TotalAlbums DESC 
LIMIT 1;",sql
6a1e5893-7491-5d66-a493-12e763d8ef70-sql,Identify artists who have albums with tracks appearing in multiple genres:,"SELECT DISTINCT artists.Name AS ArtistName 
FROM artists 
JOIN albums ON artists.ArtistId = albums.ArtistId 
JOIN tracks ON albums.AlbumId = tracks.AlbumId 
JOIN genres ON tracks.GenreId = genres.GenreId 
GROUP BY artists.ArtistId 
HAVING COUNT(DISTINCT genres.GenreId) > 1 LIMIT 20",sql
855c29ff-4cf2-5c2b-975b-de6a6b07b453-sql,Find all invoices since 2010 and the total amount invoiced:,SELECT * FROM invoices WHERE InvoiceDate >= '2010-01-01' LIMIT 20,sql
97c261d0-6491-544c-9e2d-578012773905-sql,Find the total number of invoices per country,"SELECT BillingCountry, COUNT(*) AS TotalInvoices 
FROM invoices 
GROUP BY BillingCountry LIMIT 20",sql
9c5a7f50-75e0-5480-bb58-016178c8d147-sql,List all customers from Canada and their email addresses:,"SELECT FirstName, LastName, Email 
FROM customers 
WHERE Country = 'Canada' LIMIT 20",sql
9c88a6df-8357-54b4-93e9-862738e50946-sql," 
        Can you find the top 10 most popular artists based on the number of tracks?
        Hint: There are 3 tables - artists, albums and tracks, 
        where albums and artists are linked by ArtistId, albums and tracks are linked by AlbumId,
    ","SELECT artists.Name AS ArtistName, COUNT(tracks.TrackId) AS TrackCount 
FROM artists 
JOIN albums ON artists.ArtistId = albums.ArtistId 
JOIN tracks ON albums.AlbumId = tracks.AlbumId 
GROUP BY artists.ArtistId 
ORDER BY TrackCount DESC 
LIMIT 10;",sql
9cf7eb45-5b77-5af0-9b80-4b7e7fc9c40c-sql,Find the customer with the most invoices ,"SELECT CustomerId, COUNT(*) AS InvoiceCount 
FROM invoices 
GROUP BY CustomerId 
ORDER BY InvoiceCount DESC 
LIMIT 1;",sql
9f52b00e-4ebd-5eda-b218-51645a2fbdc1-sql,Can you list all tables in the SQLite database catalog?,SELECT name FROM sqlite_master WHERE type='table' LIMIT 20,sql
a266574b-9888-5899-9d64-1cf4d37ba790-sql,List all invoices with a total exceeding $10,SELECT * FROM invoices WHERE Total > 10.00 LIMIT 20,sql
a617c062-1ab6-53f9-931f-d0e0d90c73fd-sql,"  
         Find the top 5 customers who spent the most money overall,  
         Hint: order total can be found on invoices table, calculation using invoice_items detail table is unnecessary 
    ","SELECT CustomerId, SUM(Total) AS TotalSpent 
FROM invoices 
GROUP BY CustomerId 
ORDER BY TotalSpent DESC 
LIMIT 5;",sql
b97f3d87-f182-5a9f-8e19-f2880ff82529-sql,How many customers are there,SELECT COUNT(*) AS CustomerCount FROM customers LIMIT 20,sql
d79a7821-1f54-5800-ae4c-a02f40703670-sql,List all genres and the number of tracks in each genre:,"SELECT genres.Name AS GenreName, COUNT(tracks.TrackId) AS TrackCount 
FROM genres 
LEFT JOIN tracks ON genres.GenreId = tracks.GenreId 
GROUP BY genres.GenreId LIMIT 20",sql
d7bfc823-fe90-5cbe-8f72-8919434f933b-sql,"      
        Find the top 5 customers who bought the most albums in total quantity (across all invoices):
        Hint: album quantity is found in invoice_items, 
    ","SELECT invoices.CustomerId, SUM(invoice_items.Quantity) AS TotalAlbums 
FROM invoices 
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId 
JOIN tracks ON invoice_items.TrackId = tracks.TrackId 
WHERE tracks.AlbumId IS NOT NULL 
GROUP BY invoices.CustomerId 
ORDER BY TotalAlbums DESC 
LIMIT 5;",sql
f467b5fc-fb93-5f22-b203-5afc67b2a5a6-sql,"
                    Generating SQL for this question: which table stores customer's orders
                    results in the following error: [ERROR-SQL] the generated SQL : The table that stores customer's orders is the ""invoices"" table.
 does not starts with ('select','with') .
                    Can you try to fix the error and re-generate the SQL statement?
                ","SELECT 'The table that stores customer''s orders is the ""invoices"" table.' AS Result LIMIT 20",sql
fcf5be4f-9b0e-5202-97cd-1b335e109c3c-sql,List all albums and their corresponding artist names  ,"SELECT albums.Title AS AlbumTitle, artists.Name AS ArtistName 
FROM albums 
JOIN artists ON albums.ArtistId = artists.ArtistId LIMIT 20",sql
039f9d54-59f7-5f29-8c04-14dbc3e95671-ddl,,"CREATE TABLE ""artists""
(
    ArtistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
0db84e3d-ef41-563c-803e-21c1b985dc19-ddl,,"CREATE TABLE ""invoices""
(
    InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    CustomerId INTEGER  NOT NULL,
    InvoiceDate DATETIME  NOT NULL,
    BillingAddress NVARCHAR(70),
    BillingCity NVARCHAR(40),
    BillingState NVARCHAR(40),
    BillingCountry NVARCHAR(40),
    BillingPostalCode NVARCHAR(10),
    Total NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES ""customers"" (CustomerId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
10cba811-ddba-5042-9e90-d764dfcd1629-ddl,,"CREATE INDEX IFK_InvoiceCustomerId ON ""invoices"" (CustomerId)",ddl
2c711317-b93d-5f60-a728-cb1c6fcbc040-ddl,,"CREATE INDEX IFK_CustomerSupportRepId ON ""customers"" (SupportRepId)",ddl
37319c81-65f7-50ee-956b-795de244bee5-ddl,,"CREATE TABLE sqlite_stat1(tbl,idx,stat)",ddl
40bd77cd-e1de-5872-8693-624117ff413c-ddl,,"CREATE INDEX IFK_InvoiceLineInvoiceId ON ""invoice_items"" (InvoiceId)",ddl
41130543-7164-562a-90a7-0fd0a409c154-ddl,,"CREATE TABLE ""albums""
(
    AlbumId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Title NVARCHAR(160)  NOT NULL,
    ArtistId INTEGER  NOT NULL,
    FOREIGN KEY (ArtistId) REFERENCES ""artists"" (ArtistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
458debc8-8082-5450-a17a-66028bd55ace-ddl,,"CREATE TABLE ""playlists""
(
    PlaylistId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
4815f3fd-925b-53ce-9dfa-0e4285d5abd3-ddl,,"CREATE TABLE ""invoice_items""
(
    InvoiceLineId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    InvoiceId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    Quantity INTEGER  NOT NULL,
    FOREIGN KEY (InvoiceId) REFERENCES ""invoices"" (InvoiceId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
48d484e9-984c-58ff-b391-75521c69d486-ddl,,"CREATE INDEX IFK_PlaylistTrackTrackId ON ""playlist_track"" (TrackId)",ddl
551e1120-a6ee-554f-8b8a-ccf4f22d3636-ddl,,"CREATE INDEX IFK_AlbumArtistId ON ""albums"" (ArtistId)",ddl
5ff4911e-45c1-5a59-9566-243a9b6a3320-ddl,,"CREATE TABLE ""employees""
(
    EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    FirstName NVARCHAR(20)  NOT NULL,
    Title NVARCHAR(30),
    ReportsTo INTEGER,
    BirthDate DATETIME,
    HireDate DATETIME,
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60),
    FOREIGN KEY (ReportsTo) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
65df0648-bf05-5f75-9365-c21f54b2302d-ddl,,"CREATE TABLE ""media_types""
(
    MediaTypeId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
6b585176-e66d-5b23-8d86-ca8a80e3af3d-ddl,,"CREATE INDEX IFK_EmployeeReportsTo ON ""employees"" (ReportsTo)",ddl
868758b8-e018-55e7-8cc3-75c0e6d211c8-ddl,,"CREATE INDEX IFK_TrackAlbumId ON ""tracks"" (AlbumId)",ddl
9ea4613d-c1be-5a77-ada9-c54ee3f0cab7-ddl,,"CREATE INDEX IFK_TrackMediaTypeId ON ""tracks"" (MediaTypeId)",ddl
a9c9a852-608d-5ef2-aede-26ba098d83d1-ddl,,"CREATE INDEX IFK_TrackGenreId ON ""tracks"" (GenreId)",ddl
b42cc9e1-9219-5a42-9a06-de906f76239e-ddl,,"CREATE TABLE ""tracks""
(
    TrackId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(200)  NOT NULL,
    AlbumId INTEGER,
    MediaTypeId INTEGER  NOT NULL,
    GenreId INTEGER,
    Composer NVARCHAR(220),
    Milliseconds INTEGER  NOT NULL,
    Bytes INTEGER,
    UnitPrice NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY (AlbumId) REFERENCES ""albums"" (AlbumId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (GenreId) REFERENCES ""genres"" (GenreId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (MediaTypeId) REFERENCES ""media_types"" (MediaTypeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
c387b9d2-5ff4-5a07-8364-f5dab45bb2a9-ddl,,"CREATE TABLE ""genres""
(
    GenreId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    Name NVARCHAR(120)
)",ddl
d654f328-dc36-549e-84c3-06ee0db7e0f7-ddl,,"CREATE TABLE ""playlist_track""
(
    PlaylistId INTEGER  NOT NULL,
    TrackId INTEGER  NOT NULL,
    CONSTRAINT PK_PlaylistTrack PRIMARY KEY  (PlaylistId, TrackId),
    FOREIGN KEY (PlaylistId) REFERENCES ""playlists"" (PlaylistId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (TrackId) REFERENCES ""tracks"" (TrackId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
d93f0d68-023d-5afb-8121-ba346699d318-ddl,,"CREATE TABLE ""customers""
(
    CustomerId INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FirstName NVARCHAR(40)  NOT NULL,
    LastName NVARCHAR(20)  NOT NULL,
    Company NVARCHAR(80),
    Address NVARCHAR(70),
    City NVARCHAR(40),
    State NVARCHAR(40),
    Country NVARCHAR(40),
    PostalCode NVARCHAR(10),
    Phone NVARCHAR(24),
    Fax NVARCHAR(24),
    Email NVARCHAR(60)  NOT NULL,
    SupportRepId INTEGER,
    FOREIGN KEY (SupportRepId) REFERENCES ""employees"" (EmployeeId) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)",ddl
e5879308-329e-543f-a693-0c14e2f9972e-ddl,,"CREATE INDEX IFK_InvoiceLineTrackId ON ""invoice_items"" (TrackId)",ddl
ea84418b-1a28-59b4-a1f4-2fb674208adc-ddl,,"CREATE TABLE sqlite_sequence(name,seq)",ddl
2b4dda0a-a6ac-5e34-8f76-e41c0734d55e-doc,,In the chinook database invoice means order,documentation
